{"version":3,"file":"dlx-pmpro-cloudflare-turnstile.js","mappings":"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","sources":["webpack://dlx-pmpro-turnstile/./src/js/turnstile/index.js"],"sourcesContent":["/**\n * Turnstile JS functionality.\n */\n\n/**\n * This is the main callback for Cloudflare.\n */\nwindow.onLoadDLXPMProTurnstileCallback = () => {\n\t// Get the submit button. If not found, bail.\n\tconst submitButtonSelector = '.login-submit input[type=\"submit\"], #pmpro_submit_span input[type=\"submit\"], #loginform input[type=\"submit\"]';\n\n\tconst submitButton = document.querySelector( submitButtonSelector );\n\tif ( null === submitButton ) {\n\t\treturn;\n\t}\n\n\t// Mark submit button as disabled.\n\tsubmitButton.setAttribute( 'disabled', 'disabled' );\n\n\t// Now get the main form.\n\tconst pmproForm = submitButton.closest( 'form' );\n\tif ( null === pmproForm ) {\n\t\treturn;\n\t}\n\n\t// Check that turnstile is present.\n\tif ( typeof turnstile === 'undefined' ) {\n\t\treturn;\n\t}\n\n\t/**\n\t * This is the callback for when the user has filled out the textarea.\n\t * We wait until the textarea is filled out to load turnstile to avoid the 300 second timeout of the token.\n\t */\n\tconst turnstileBeginRender = () => {\n\t\t// Now init turnstile.\n\t\tlet retries = 1;\n\t\tconst maxRetries = 5;\n\t\t// eslint-disable-next-line no-undef\n\t\tconst widgetId = turnstile.render( '#dlx-pmpro-turnstile', {\n\t\t\tsitekey: '1x00000000000000000000AA',\n\t\t\tretry: 'never',\n\t\t\tcallback: ( token ) => {\n\t\t\t\t// Re-enable the submit button.\n\t\t\t\tsubmitButton.removeAttribute( 'disabled' );\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t// Reset the widget.\n\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\tturnstile.reset( widgetId );\n\t\t\t\t}, 300000 ); // 300 seconds (5 mins).\n\t\t\t},\n\t\t\t'error-callback': ( error ) => {\n\t\t\t\t// if crashed, retry.\n\t\t\t\tif ( 'crashed' === error ) {\n\t\t\t\t\tif ( retries < maxRetries ) {\n\t\t\t\t\t\tconsole.error( 'Turnstile seems not be available. Retrying. (From Cloudflare Turnstile - DLXPMProTurnstile)' );\n\t\t\t\t\t\tdocument.querySelector( '#dlx-pmpro-turnstile' ).insertAdjacentHTML( 'beforeend', '<div class=\"pmpro_message pmpro_error pmpro_captcha_verification_error\">There has been an error communicating with Cloudflare Turnstile (Retrying...).</div>' );\n\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\tturnstile.reset( widgetId );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdocument.querySelector( '#dlx-pmpro-turnstile' ).insertAdjacentHTML( 'beforeend', '<div class=\"pmpro_message pmpro_error pmpro_captcha_verification_error\">Could not communicate with Cloudflare Turnstile.</div>' );\n\t\t\t\t\t\tconsole.error( 'Turnstile seems not be available. Max retries reached. (From Cloudflare Turnstile - DLXPMProTurnstile)' );\n\t\t\t\t\t}\n\t\t\t\t\tretries += 1;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Tokens can be returned in 000*** format.\n\n\t\t\t\t// If interactive challenge failed, reuse the retries var.\n\t\t\t\tconst retryChallengeCodes = [\n\t\t\t\t\t'102',\n\t\t\t\t\t'103',\n\t\t\t\t\t'104',\n\t\t\t\t\t'106',\n\t\t\t\t]; // From: https://developers.cloudflare.com/turnstile/reference/client-side-errors\n\n\t\t\t\t// If interactive challenge failed, check challenge code at beginning of token. Reuse max retries var.\n\t\t\t\tif ( retryChallengeCodes.includes( error.substring( 0, 3 ) ) ) {\n\t\t\t\t\tif ( retries < maxRetries ) {\n\t\t\t\t\t\tconsole.error( 'Turnstile interactive challenge failed. Retrying. (From Cloudflare Turnstile - DLXPMProTurnstile)' );\n\t\t\t\t\t\tdocument.querySelector( '#dlx-pmpro-turnstile' ).insertAdjacentHTML( 'beforeend', '<div class=\"pmpro_message pmpro_error pmpro_captcha_verification_error\">There has been an error communicating with Cloudflare Turnstile (Retrying...).</div>' );\n\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\tturnstile.reset( widgetId );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdocument.querySelector( '#dlx-pmpro-turnstile' ).insertAdjacentHTML( 'beforeend', '<div class=\"pmpro_message pmpro_error pmpro_captcha_verification_error\">Could not communicate with Cloudflare Turnstile.</div>' );\n\t\t\t\t\t\tconsole.error( 'Turnstile interactive challenge failed. Max retries reached. (From Cloudflare Turnstile - DLXPMProTurnstile)' );\n\t\t\t\t\t}\n\t\t\t\t\tretries += 1;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Otherwise display user failed challenge error.\n\t\t\t\tdocument.querySelector( '#dlx-pmpro-turnstile' ).insertAdjacentHTML( 'beforeend', '<div class=\"pmpro_message pmpro_error pmpro_captcha_verification_error\">You could not be verified as human.</div>' );\n\n\n\t\t\t\t// Remove error after 10 seconds.\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tdocument.querySelector( '.pmpro_captcha_verification_error' ).remove();\n\t\t\t\t}, 10000 );\n\t\t\t},\n\t\t\tsize: 'normal', /* can be compact. Todo - make option */\n\t\t\ttheme: 'light', /* can be light, dark, auto. Todo - make option */\n\t\t\tlanguage: 'auto', /* todo - make option */\n\t\t} );\n\t};\n\n\t// Set up the textarea event. Render Turnstile immediately.\n\tturnstileBeginRender();\n};\n"],"names":["window","onLoadDLXPMProTurnstileCallback","submitButtonSelector","submitButton","document","querySelector","setAttribute","pmproForm","closest","turnstile","turnstileBeginRender","retries","maxRetries","widgetId","render","sitekey","retry","callback","token","removeAttribute","setTimeout","reset","errorCallback","error","console","insertAdjacentHTML","retryChallengeCodes","includes","substring","remove","size","theme","language"],"sourceRoot":""}